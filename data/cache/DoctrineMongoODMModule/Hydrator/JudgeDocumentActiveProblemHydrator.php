<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class JudgeDocumentActiveProblemHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['title'])) {
            $value = $data['title'];
            $return = (string) $value;
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['description'])) {
            $value = $data['description'];
            $return = (string) $value;
            $this->class->reflFields['description']->setValue($document, $return);
            $hydratedData['description'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (string) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['t'])) {
            $value = $data['t'];
            $return = $value;
            $this->class->reflFields['tags']->setValue($document, $return);
            $hydratedData['tags'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['answer'])) {
            $value = $data['answer'];
            $return = (string) $value;
            $this->class->reflFields['answer']->setValue($document, $return);
            $hydratedData['answer'] = $return;
        }

        /** @Field(type="increment") */
        if (isset($data['solved'])) {
            $value = $data['solved'];
            $return = is_float($value) ? (float) $value : (int) $value;
            $this->class->reflFields['solved']->setValue($document, $return);
            $hydratedData['solved'] = $return;
        }

        /** @Field(type="increment") */
        if (isset($data['attempts'])) {
            $value = $data['attempts'];
            $return = is_float($value) ? (float) $value : (int) $value;
            $this->class->reflFields['attempts']->setValue($document, $return);
            $hydratedData['attempts'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['difficulty'])) {
            $value = $data['difficulty'];
            $return = (int) $value;
            $this->class->reflFields['difficulty']->setValue($document, $return);
            $hydratedData['difficulty'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['ta'])) {
            $value = $data['ta'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } elseif ($value instanceof \DateTime) { $return = $value; } else { $return = new \DateTime($value); }
            $this->class->reflFields['timeAdded']->setValue($document, clone $return);
            $hydratedData['timeAdded'] = $return;
        }

        /** @Field(type="object_id") */
        if (isset($data['postedby'])) {
            $value = $data['postedby'];
            $return = (string) $value;
            $this->class->reflFields['postedById']->setValue($document, $return);
            $hydratedData['postedById'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['userSubmission'])) {
            $value = $data['userSubmission'];
            $return = (string) $value;
            $this->class->reflFields['userSubmission']->setValue($document, $return);
            $hydratedData['userSubmission'] = $return;
        }

        /** @Field(type="increment") */
        if (isset($data['rating'])) {
            $value = $data['rating'];
            $return = is_float($value) ? (float) $value : (int) $value;
            $this->class->reflFields['rating']->setValue($document, $return);
            $hydratedData['rating'] = $return;
        }

        /** @Field(type="increment") */
        if (isset($data['numVotes'])) {
            $value = $data['numVotes'];
            $return = is_float($value) ? (float) $value : (int) $value;
            $this->class->reflFields['numVotes']->setValue($document, $return);
            $hydratedData['numVotes'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['totalRating'])) {
            $value = $data['totalRating'];
            $return = (float) $value;
            $this->class->reflFields['totalRating']->setValue($document, $return);
            $hydratedData['totalRating'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }
        return $hydratedData;
    }
}