<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class JudgeDocumentAlgorithmUserSubmissionHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['processedMessage'])) {
            $value = $data['processedMessage'];
            $return = (string) $value;
            $this->class->reflFields['message']->setValue($document, $return);
            $hydratedData['message'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['score'])) {
            $value = $data['score'];
            $return = (float) $value;
            $this->class->reflFields['score']->setValue($document, $return);
            $hydratedData['score'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['tc'])) {
            $value = $data['tc'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } elseif ($value instanceof \DateTime) { $return = $value; } else { $return = new \DateTime($value); }
            $this->class->reflFields['timeCreated']->setValue($document, clone $return);
            $hydratedData['timeCreated'] = $return;
        }

        /** @Field(type="object_id") */
        if (isset($data['pid'])) {
            $value = $data['pid'];
            $return = (string) $value;
            $this->class->reflFields['problemId']->setValue($document, $return);
            $hydratedData['problemId'] = $return;
        }

        /** @Field(type="object_id") */
        if (isset($data['uid'])) {
            $value = $data['uid'];
            $return = (string) $value;
            $this->class->reflFields['userId']->setValue($document, $return);
            $hydratedData['userId'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['totalCases'])) {
            $value = $data['totalCases'];
            $return = (int) $value;
            $this->class->reflFields['totalCases']->setValue($document, $return);
            $hydratedData['totalCases'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['solvedCases'])) {
            $value = $data['solvedCases'];
            $return = (int) $value;
            $this->class->reflFields['solvedCases']->setValue($document, $return);
            $hydratedData['solvedCases'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['status'])) {
            $value = $data['status'];
            $return = (string) $value;
            $this->class->reflFields['status']->setValue($document, $return);
            $hydratedData['status'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['lang'])) {
            $value = $data['lang'];
            $return = (string) $value;
            $this->class->reflFields['language']->setValue($document, $return);
            $hydratedData['language'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['source'])) {
            $value = $data['source'];
            $return = (string) $value;
            $this->class->reflFields['source']->setValue($document, $return);
            $hydratedData['source'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['filename'])) {
            $value = $data['filename'];
            $return = (string) $value;
            $this->class->reflFields['filename']->setValue($document, $return);
            $hydratedData['filename'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }
        return $hydratedData;
    }
}